{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input",
  "type": "registry:component",
  "title": "Input",
  "description": "A input component",
  "files": [
    {
      "path": "registry/new-york/blocks/input/input.tsx",
      "content": "\"use client\";\n\nimport { forwardRef, ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends Omit<React.ComponentProps<\"input\">, \"prefix\" | \"suffix\"> {\n  prefix?: ReactNode;\n  suffix?: ReactNode;\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, prefix, suffix, ...props }: InputProps, ref) => {\n    const hasPrefix = !!prefix;\n    const hasSuffix = !!suffix;\n\n    return (\n      <div\n        className={cn(\n          \"relative flex w-full items-center\",\n          props.disabled && \"cursor-not-allowed\",\n          className\n        )}\n      >\n        {hasPrefix && (\n          <span className=\"text-muted-foreground pointer-events-none absolute left-0 z-10 flex h-full items-center px-2\">\n            {prefix}\n          </span>\n        )}\n\n        <input\n          ref={ref}\n          type={type}\n          data-slot=\"input\"\n          className={cn(\n            \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n            \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n            \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n            hasPrefix ? \"pl-7\" : \"pl-2\",\n            hasSuffix ? \"pr-6\" : \"pr-2\"\n          )}\n          {...props}\n        />\n\n        {hasSuffix && (\n          <span className=\"text-muted-foreground pointer-events-none absolute right-0 z-10 flex h-full items-center px-2\">\n            {suffix}\n          </span>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = \"Input\";\n",
      "type": "registry:component",
      "target": "components/turboost-ui/input/input.tsx"
    }
  ]
}